// import { NextResponse } from 'next/server';
// import type { NextRequest } from 'next/server';
// import jwt from 'jsonwebtoken';
// import Cookies from 'js-cookie';
// // Interface cho payload của JWT
// interface AccessTokenPayload {
//   userId: number;
//   deviceId: number;
//   roleId: number;
//   roleName: string;
//   uuid: string;
//   iat: number;
//   exp: number;
// }

// export function middleware(request: NextRequest) {
//   const { pathname } = request.nextUrl;

//   // Danh sách các route cần kiểm tra
//   const protectedAuthRoutes = [
//     '/forgot-password',
//     '/reset-password',
//     '/sign-in',
//     '/sign-up',
//     '/verify-2fa',
//     '/verify-code',
//     '/verify-email',
//   ];

//   // Kiểm tra nếu pathname khớp với các route buyer
//   if (protectedAuthRoutes.includes(pathname)) {
//     // Lấy accessToken từ cookie
//     const accessToken = Cookies.get('access_token');
//     console.log(accessToken)
//     if (accessToken) {
//       try {
//         // Decode JWT để lấy thông tin
//         const decoded = jwt.decode(accessToken) as AccessTokenPayload | null;

//         if (decoded && decoded.roleName) {
//           // Redirect dựa trên roleName cho các route auth
//           if (decoded.roleName === 'Admin') {
//             return NextResponse.redirect(new URL('/admin', request.url));
//           } else if (decoded.roleName === 'Customer') {
//             // Cả USER và CLIENT đều redirect về /
//             return NextResponse.redirect(new URL('/', request.url));
//           }
//         }
//       } catch (error) {
//         console.error('Error decoding accessToken:', error);
//         // Nếu token không hợp lệ, xóa cookie và tiếp tục
//         const response = NextResponse.next();
//         response.cookies.delete('access_token');
//         return response;
//       }
//     }
//   }

//   // Kiểm tra quyền cho các route chứa /admin
//   if (pathname.startsWith('/admin')) {
//     const accessToken = request.cookies.get('access_token')?.value;

//     if (accessToken) {
//       try {
//         const decoded = jwt.decode(accessToken) as AccessTokenPayload | null;

//         if (decoded && decoded.roleName) {
//           if (decoded.roleName !== 'Admin') {
//             // Ngăn chặn tất cả role không phải ADMIN (bao gồm CLIENT, USER, v.v.)
//             return NextResponse.rewrite(new URL('/not-found', request.url));
//           }
//           // Nếu là ADMIN, cho phép tiếp tục
//           return NextResponse.next();
//         }
//       } catch (error) {
//         console.error('Error decoding accessToken:', error);
//         const response = NextResponse.next();
//         response.cookies.delete('access_token');
//         return response;
//       }
//     } else {
//       // Nếu không có accessToken, cũng redirect về not-found
//       return NextResponse.rewrite(new URL('/not-found', request.url));
//     }
//   }

//   // Cho phép request tiếp tục nếu không cần redirect
//   return NextResponse.next();
// }

// // Cấu hình matcher để áp dụng middleware cho các route cụ thể
// export const config = {
//   matcher: [
//     '/forgot-password',
//     '/reset-password',
//     '/sign-in',
//     '/sign-up',
//     '/verify-2fa',
//     '/verify-code',
//     '/verify-email',
//     '/admin/:path*', // Áp dụng cho tất cả route bắt đầu bằng /admin
//   ],
// };

// import createMiddleware from "next-intl/middleware";
// import { locales, defaultLocale } from "./i18n/i18n";

// export default createMiddleware({
//   locales,
//   defaultLocale,
//   localePrefix: "always", // Always include the locale in the URL (e.g., /vi, /en)
// });

// export const config = {
//   matcher: ["/((?!api|_next|.*\\..*).*)"], // Apply middleware to all routes except API routes, _next, and static files
// };
